#+STARTUP: overview
#+TITLE: Project File
#+SUBTITLE: BME 492 - 2025 Spring - Mandibular Mechanics
#+CREATOR: Fethi Okyar
#+LANGUAGE: en; tr
#+OPTIONS: num:nil
#+ATTR_HTML: :style margin-left: auto; margin-right: auto;
#+SEQ_TODO: NEXT(n/!) TODO(t@/!) WAITING(w@/!) PROJ(p) | DONE(d@) CANCELLED(c@)
#+ARCHIVE: ~/snkr/org/archive.org::* From %s
#+TAGS:guz2023

[[file:folder-1/README.org][Go to target file]]

* Fundamentals
** github
1. https://github.com/community/Global-Campus-Teachers/discussions/6 Introduction to GitHub Classroom duyurusu
2. https://skills.github.com/ Learning github featuring beginner to advanced courses
3. https://cli.github.com/ Github CLI, download for your OS
6. [[https://docs.github.com/en/education/manage-coursework-with-github-classroom/teach-with-github-classroom/connect-a-learning-management-system-course-to-a-classroom][connect-a-learning-management-system-course-to-a-classroom]]
7. [ ] bu süreç github classroom'da nasıl yönetilir?
8. [ ] ders bir github reposu mudur?
   Görünüşe göre classroom'da sadece assignment veriliyor. Bir öğrenci assignment'a url'den girdiğinde bir repository açılıyor. Classroom'da genel bir home repository olduğunu görmedim. Belki organizasyon içinde syllabus'la alakalı bir repository açılabilir ve içine README.org vb koyulabilir.
9. [ ] README.org dosyası olacak mı? (dersin syllabusu olacak)

** temel terimler
|-----------------+--------------------+-------------+-------------+-----------------------|
| terminal        | shell              | console     | computer    | processor             |
|-----------------+--------------------+-------------+-------------+-----------------------|
| data types      | version            | script      | execution   | open-source           |
|-----------------+--------------------+-------------+-------------+-----------------------|
| kernel          | operating system   | iteration   | loops       | conditional statement |
|-----------------+--------------------+-------------+-------------+-----------------------|
| git             | command            | syntax      | indentation | library               |
|-----------------+--------------------+-------------+-------------+-----------------------|
| scope           | function           | variable    | argument    | plotting              |
|-----------------+--------------------+-------------+-------------+-----------------------|
| return          | algorithm          | psuedo code | module      | arithmetic            |
|-----------------+--------------------+-------------+-------------+-----------------------|
| row-major order | column-major order | algebra     | indexing    | slicing               |
|-----------------+--------------------+-------------+-------------+-----------------------|
| boolean         | logic              | file system | path        | directory             |
|-----------------+--------------------+-------------+-------------+-----------------------|
| folder          | file               | computation | memory      | Hadamarad product     |
|-----------------+--------------------+-------------+-------------+-----------------------|
| Dot product     | program            | programming | interpreter |                       |

** çalışma takvimi
*** week 1
*** week 2

* Meeting Notes
** July 16, Restart
  1. febio ile örnek ve çalışmayan input dosyalarına bakıldı (örnek dosyada bulunan iki parça tek parçaymış gibi modellenmiş, ayrıca birçok serbestlik derecesi gereksiz şekilde sabitlenmiş)
  2. febio'dan vazgeçme kararı verdim, onun yerine açık kaynak prepomax/calculix çifti denendi.
  3. model için onshape'e girildi. Bir belge oluşturuldu (mandible_mockup) ve Belsu ile paylaşıldı.
  4. onshape'de export, prepomax'da import komutları incelendi, birden fazla parça içeren studio'lardan tek parça çekebiliyor (soru: step ve/veya iges dosyalarında birden fazla parça temsili için assembly olması mı gerekir? chatGPT'ye sorulacak).
  5. prepomax'da assembly contact ayarları ve çalıştırılması üzerinde çalışılacak. parçalar, bağlantılar ve yükleme senaryosu oluşturuldu. kap içerisinde boşluklu geçme çubuğun yukarıdan bir yöne doğru çekilmesi.
 
* Input
** calculix models
** CAD models
** Imaging models
* Output
| Week | Topics                                                   | change                                     | lab                                           |
|------+----------------------------------------------------------+--------------------------------------------+-----------------------------------------------|
|    1 | Introduction to Computers and Software and MATLAB®       | course conduct                             | no lab                                        |
|    2 | Programming Languages: Matlab, Python                    | interacting with a computer                |                                               |
|    3 | Basic Calculations & Variables, Lists                    | interacting with an operating system       | terminal crash course w/openAI                |
|    4 | Built-in Functions and Libraries                         | programming environments: octave, python   | github crash course                           |
|    5 | Character Arrays and Display Functions                   | data types, operator precedence, registers | basic calculations                            |
|    6 | Script Files & User Defined Functions                    | available functions, function libraries    | demo of a small library                       |
|    7 | 1ST MIDTERM                                              | character type, basic shell input/output   | user interaction demo, reading data from file |
|    8 | Logical Operators, Operations & The ‘find’ Command       | scripting snippets, storing in files       | a script that calculates the GPA              |
|    9 | The if – else Statement                                  | list data type in octave vs. python        | number lists for vector-matrix ops            |
|   10 | For Loops                                                | logicals, operators, using 'find'          | debugging algorithms                          |
|   11 | While Loops                                              | the if-else conditional                    | bisection method (rootfinding)                |
|   12 | 2ND MIDTERM                                              | constructing loops for repeated tasks      | generating data series (for plotting)         |
|   13 | Simple 2D Plotting & Multiple Plots in one Figure Window | loops terminating with a while conditional | converging algorithms (rootfinding)           |
|   14 | File Operations                                          |                                            |                                               |

